package main

/*
位1的个数
编写一个函数，输入是一个无符号整数（以二进制串的形式），返回其二进制表达式中数字位数为 '1' 的个数（也被称为汉明重量）

示例 1：
输入：n = 00000000000000000000000000001011
输出：3
解释：输入的二进制串 00000000000000000000000000001011中，共有三位为 '1'。

示例 2：
输入：n = 00000000000000000000000010000000
输出：1
解释：输入的二进制串 00000000000000000000000010000000中，共有一位为 '1'。

示例 3：
输入：n = 11111111111111111111111111111101
输出：31
解释：输入的二进制串 11111111111111111111111111111101 中，共有 31 位为 '1'。
*/

// 方法一:循环检查二进制位
func hammingWeight(num uint32) (ones int) {
	for i := 0; i < 32; i++ {
		if num&1<<i > 0 {
			ones++
		}
	}
	return
}

// 方法二:位运算优化
func hammingWeight2(num uint32) (ones int) {
	for ; num > 0; num &= num - 1 {
		ones++
	}
	return
}
